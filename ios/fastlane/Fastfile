
default_platform(:ios)

platform :ios do
  desc "Push a new beta build to pgy"
  before_all do
    ENV["CACHE_GIT_URL"] = ENV["GIT_URL"]
  end

  lane :debug do
    xcode_select "/Applications/Xcode.app"

    create_keychain(
        name: ENV['MATCH_KEYCHAIN_NAME'],
        password: ENV["MATCH_KEYCHAIN_PASSWORD"],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
    )

    match(
          app_identifier: ENV["APP_IDENTIFIER"],
          git_url: ENV["GIT_URL"],
          type: "adhoc",
          readonly: is_ci,
          keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
          keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )

    build_app(
        workspace: "Runner.xcworkspace",
        scheme: "Runner",
        export_method: "ad-hoc"
    )

    pgyer(
        api_key: ENV['PGY_API_KEY'],
        user_key: ENV['PGY_USER_KEY']
    )
  end

  lane :beta do
    xcode_select "/Applications/Xcode_13.3.1.app"
    if is_ci
      create_keychain(
        name: ENV['MATCH_KEYCHAIN_NAME'],
        password: ENV["MATCH_KEYCHAIN_PASSWORD"],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )
    end

    match(
      app_identifier: ENV["APP_IDENTIFIER"],
      git_url: ENV["GIT_URL"],
      type: "adhoc",
      readonly: is_ci,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )

    build_app(
        workspace: "Runner.xcworkspace",
        scheme: "Runner",
        export_method: "ad-hoc"
    )

    pgyer(
        api_key: ENV['PGY_API_KEY'],
        user_key: ENV['PGY_USER_KEY']
    )
  end

  desc "编译正式版"
  lane :release do
    gym(output_name: ENV['ipa_name'], # 导出的ipa名字
    scheme: "Runner",
    # export_method 可以根据打包类型进行相应设置。可选的值有：app-store、ad-hoc、development、enterprise
    export_method: "app-store",
    # 指定编译方式为Debug 还是 Release, 默认为Release,
    configuration: "Release",              # Debug or Release
    clean: true,                           #清空上次打包信息
    include_bitcode: true,
    workspace: "Runner.xcworkspace",
    output_directory:"~/Downloads/ipa")# ipa导出目录
  end
end
